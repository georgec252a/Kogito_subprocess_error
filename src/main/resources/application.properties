server.address=0.0.0.0

#run create tables scripts during the application startup
# spring.flyway.enabled=true
# spring.flyway.locations=classpath:db/{vendor}

#Details https://www.postgresql.org/docs/9.6/static/libpq-connect.html#LIBPQ-CONNSTRING

# kogito.persistence.type=jdbc
# spring.datasource.url=jdbc:postgresql://localhost:5432/kogito
# spring.datasource.username=kogito-user
# spring.datasource.password=kogito-pass

# events
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer



#mp.messaging.outgoing.kogito-processinstances-events.bootstrap.servers=localhost:9092
mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer



#mp.messaging.outgoing.kogito-usertaskinstances-events.bootstrap.servers=localhost:9092
mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


#mp.messaging.outgoing.kogito-variables-events.bootstrap.servers=localhost:9092
mp.messaging.outgoing.kogito-variables-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-variables-events.topic=kogito-variables-events
mp.messaging.outgoing.kogito-variables-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer



kogito.service.url=http://localhost:8080
kogito.dataindex.http.url=http://localhost:8180
kogito.dataindex.ws.url=ws://localhost:8180
kafka.bootstrap.servers=localhost:9092

kogito.users.admin.groups=admin
kogito.users.jdoe.groups=admin
kogito.users.bxf.groups=admin
kogito.users.test.groups=admin
kogito.users.user.groups=user


%postgresql.spring.flyway.enabled=true
%postgresql.spring.flyway.locations=classpath:db/{vendor}
%postgresql.kogito.persistence.type=jdbc
%postgresql.spring.datasource.url=jdbc:postgresql://localhost:5432/kogito
%postgresql.spring.datasource.username=kogito-user
%postgresql.spring.datasource.password=kogito-pass


%infinispan.kogito.persistence.type=infinispan
%infinispan.infinispan.remote.server-list=127.0.0.1:11222
%infinispan.kogito.persistence.type=infinispan
keycloak.realm=kogito
keycloak.resource=kogito-app
keycloak.credentials.secret=secret
keycloak.cors=false
keycloak.ssl-required=external
keycloak.bearer-only=true
keycloak.use-resource-role-mappings=true
keycloak.auth-server-url=http://localhost:8480/auth


spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=travellers-group
spring.kafka.consumer.auto-offset-reset=earliest
kogito.addon.cloudevents.kafka.kogito_incoming_stream=travellers
kogito.addon.cloudevents.kafka.kogito_outgoing_stream=processedtravellers
kogito.addon.cloudevents.kafka.kogito_outgoing_stream.no\u0020travel=cancelledtravellers


management.security.enabled=false
management.endpoints.web.exposure.include=metrics,prometheus