apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: kogito-app
  name: kogito-app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kogito-app
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/test-default: "true"
        io.kompose.service: kogito-app
    spec:
      containers:
        - env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: kafka:29092
            - name: KOGITO_DATAINDEX_HTTP_URL
              value: http://host.docker.internal:8180/graphql
            - name: KOGITO_DATAINDEX_WS_URL
              value: ws://host.docker.internal:8180
            - name: KOGITO_PERSISTENCE_TYPE
              value: jdbc
            - name: KOGITO_SERVICE_URL
              value: http://host.docker.internal:8080
            - name: KOGITO_TASK_CONSOLE_PROPS
              value: -Dkogito.consoles.keycloak.config.url=http://host.docker.internal:8480/auth -Dkogito.consoles.keycloak.config.health-check-url=http://host.docker.internal:8480/auth/realms/kogito/.well-known/openid-configuration -Dkogito.svg.folder.path=/home/kogito/data/svg
            - name: SPRING_DATASOURCE_PASSWORD
              value: kogito-pass
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres:5432/kogito
            - name: SPRING_DATASOURCE_USERNAME
              value: kogito-user
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: kafka:29092
            - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
              value: org.apache.kafka.common.serialization.StringSerializer
            - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
              value: org.apache.kafka.common.serialization.StringSerializer
          image: georgec252a/mmv3-process-postgresql-persistence-springboot:1.35.0.Final
          name: kogito-app
          ports:
            - containerPort: 8080
          resources:
           limits:
            cpu: 500m
            ephemeral-storage: 1Gi
            memory: 2Gi
           requests:
            cpu: 500m
            ephemeral-storage: 1Gi
            memory: 2Gi
          securityContext:
           capabilities:
            drop:
            - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
status: {}
